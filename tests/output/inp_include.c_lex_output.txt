TKN_MACRO_INCLUDE
TKN_LIT_STR(test_header.h)
TKN_INT
TKN_ID(main)
TKN_L_PAREN
TKN_R_PAREN
TKN_L_BRACE
TKN_ID(print_message)
TKN_L_PAREN
TKN_LIT_STR(Hello from included function!)
TKN_R_PAREN
TKN_SEMICOLON
TKN_INT
TKN_ID(array)
TKN_L_BRACK
TKN_ID(MAX_SIZE)
TKN_R_BRACK
TKN_SEMICOLON
TKN_ID(printf)
TKN_L_PAREN
TKN_LIT_STR(Array size: %d
)
TKN_COMMA
TKN_ID(MAX_SIZE)
TKN_R_PAREN
TKN_SEMICOLON
TKN_INT
TKN_ID(sum)
TKN_ASSIGN
TKN_ID(add_numbers)
TKN_L_PAREN
TKN_LIT_INT(5)
TKN_COMMA
TKN_LIT_INT(7)
TKN_R_PAREN
TKN_SEMICOLON
TKN_ID(printf)
TKN_L_PAREN
TKN_LIT_STR(5 + 7 = %d
)
TKN_COMMA
TKN_ID(sum)
TKN_R_PAREN
TKN_SEMICOLON
TKN_STRUCT
TKN_ID(Point)
TKN_ID(p)
TKN_SEMICOLON
TKN_ID(p)
TKN_DOT
TKN_ID(x)
TKN_ASSIGN
TKN_LIT_INT(10)
TKN_SEMICOLON
TKN_ID(p)
TKN_DOT
TKN_ID(y)
TKN_ASSIGN
TKN_LIT_INT(20)
TKN_SEMICOLON
TKN_ID(printf)
TKN_L_PAREN
TKN_LIT_STR(Point: (%d, %d)
)
TKN_COMMA
TKN_ID(p)
TKN_DOT
TKN_ID(x)
TKN_COMMA
TKN_ID(p)
TKN_DOT
TKN_ID(y)
TKN_R_PAREN
TKN_SEMICOLON
TKN_RETURN
TKN_LIT_INT(0)
TKN_SEMICOLON
TKN_R_BRACE
TKN_EOF
